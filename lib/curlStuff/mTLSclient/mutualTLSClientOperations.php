<?php

namespace curlStuff\mTLSclient;

use GuzzleHttp\Client;
use GuzzleHttp\Pool;
use GuzzleHttp\Promise\PromiseInterface;
use Psr\Http\Message\RequestInterface;
use Psr\Http\Message\ResponseInterface;


class mutualTLSClientOperations extends Client
{
    private bool $mTLS;
    private array $options;

    public function __construct(array $config = [], bool $useMtls = false, array $mTLSOpts = [])
    {
        parent::__construct($config);
        if ($useMtls){
            $this->mTLS = $useMtls;
            $this->options = $mTLSOpts;
        }
    }

    public function request(string $method, $uri = '', array $options = []): ResponseInterface
    {
        return parent::request($method, $uri, $options); // TODO: Change the autogenerated stub
    }

    public function requestAsync(string $method, $uri = '', array $options = []): PromiseInterface
    {
        return parent::requestAsync($method, $uri, $options); // TODO: Change the autogenerated stub
    }
    

    public function getAsync($uri, array $options = []): PromiseInterface
    {
    }

    private function headAsync($uri, array $options = []): PromiseInterface
    {
    }

    private function postAsync($uri, array $options = []): PromiseInterface
    {
    }
}